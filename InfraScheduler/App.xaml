<Application x:Class="InfraScheduler.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:InfraScheduler"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:converters="clr-namespace:InfraScheduler.Converters">

    <Application.Resources>
        <ResourceDictionary>
            <!-- Converters -->
            <converters:OffsetToThicknessConverter x:Key="OffsetToThicknessConverter" />
            <converters:StatusToColorConverter x:Key="StatusToColorConverter" />
            <converters:StatusToProgressColorConverter x:Key="StatusToProgressColorConverter" />
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>

            <!-- Colors -->
            <Color x:Key="PrimaryColor">#2196F3</Color>
            <Color x:Key="SecondaryColor">#FFC107</Color>
            <Color x:Key="SuccessColor">#4CAF50</Color>
            <Color x:Key="DangerColor">#F44336</Color>
            <Color x:Key="WarningColor">#FF9800</Color>
            <Color x:Key="InfoColor">#00BCD4</Color>
            <Color x:Key="LightColor">#F5F5F5</Color>
            <Color x:Key="DarkColor">#212121</Color>

            <!-- Brushes -->
            <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
            <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource SecondaryColor}"/>
            <SolidColorBrush x:Key="SuccessBrush" Color="{StaticResource SuccessColor}"/>
            <SolidColorBrush x:Key="DangerBrush" Color="{StaticResource DangerColor}"/>
            <SolidColorBrush x:Key="WarningBrush" Color="{StaticResource WarningColor}"/>
            <SolidColorBrush x:Key="InfoBrush" Color="{StaticResource InfoColor}"/>
            <SolidColorBrush x:Key="LightBrush" Color="{StaticResource LightColor}"/>
            <SolidColorBrush x:Key="DarkBrush" Color="{StaticResource DarkColor}"/>
            <SolidColorBrush x:Key="BorderBrush" Color="#FFCCCCCC"/>

            <!-- Styles -->
            <Style TargetType="Button">
                <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Padding" Value="15,5"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="3">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource SecondaryBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="TextBox">
                <Setter Property="Padding" Value="5"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{StaticResource LightBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="3">
                                <ScrollViewer x:Name="PART_ContentHost"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ComboBox">
                <Setter Property="Padding" Value="5"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{StaticResource LightBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="3">
                                <Grid>
                                    <ToggleButton x:Name="ToggleButton"
                                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                ClickMode="Press">
                                        <ToggleButton.Template>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Border x:Name="TemplateBorder"
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        CornerRadius="3">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition/>
                                                            <ColumnDefinition Width="20"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ContentPresenter Grid.Column="0"
                                                                        Content="{TemplateBinding Content}"
                                                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                                        VerticalAlignment="Center"
                                                                        HorizontalAlignment="Left"
                                                                        Margin="3,0,0,0"/>
                                                        <Path Grid.Column="1"
                                                              x:Name="Arrow"
                                                              Fill="Black"
                                                              HorizontalAlignment="Center"
                                                              VerticalAlignment="Center"
                                                              Data="M0,0 L4,4 L8,0 Z"/>
                                                    </Grid>
                                                </Border>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                    </ToggleButton>
                                    <Popup x:Name="PART_Popup"
                                           AllowsTransparency="True"
                                           IsOpen="{TemplateBinding IsDropDownOpen}"
                                           Placement="Bottom"
                                           PopupAnimation="Slide">
                                        <Border x:Name="DropDownBorder"
                                                Background="White"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="1"
                                                CornerRadius="3">
                                            <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                         SnapsToDevicePixels="True">
                                                <ItemsPresenter/>
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="DataGrid">
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderBrush" Value="{StaticResource LightBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="RowBackground" Value="White"/>
                <Setter Property="AlternatingRowBackground" Value="{StaticResource LightBrush}"/>
                <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource LightBrush}"/>
                <Setter Property="VerticalGridLinesBrush" Value="{StaticResource LightBrush}"/>
                <Setter Property="HeadersVisibility" Value="Column"/>
                <Setter Property="CanUserAddRows" Value="False"/>
                <Setter Property="CanUserDeleteRows" Value="False"/>
                <Setter Property="CanUserReorderColumns" Value="True"/>
                <Setter Property="CanUserResizeColumns" Value="True"/>
                <Setter Property="CanUserSortColumns" Value="True"/>
                <Setter Property="AutoGenerateColumns" Value="False"/>
                <Setter Property="SelectionMode" Value="Single"/>
                <Setter Property="SelectionUnit" Value="FullRow"/>
            </Style>

            <Style TargetType="DataGridColumnHeader">
                <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="BorderThickness" Value="0,0,1,1"/>
                <Setter Property="BorderBrush" Value="{StaticResource LightBrush}"/>
            </Style>

            <Style TargetType="DataGridRow">
                <Setter Property="BorderThickness" Value="0"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource SecondaryBrush}"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="NavButtonStyle" TargetType="Button">
                <Setter Property="Margin" Value="0,5"/>
                <Setter Property="Padding" Value="10,5"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#FFE0E0E0"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
